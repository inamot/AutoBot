 
   $id$ 
   copyright  c  1996-2007 regents university california rights reserved  permission use  copy  modify distribute software documentation without fee without written 
   agreement hereby granted  provided above copyright notice paragraph appear copies software program documentation copyrighted regents university california software program documentation supplied without any accompanying services regents regents not warrant operation program uninterrupted error-free end-user understands program developed research purposes advised not rely 
   exclusively program any reason event shall university california liable any party direct  indirect  
   special  incidental consequential damages  including lost profits  
   arising out use software documentation  even university california advised possibility damage university california specifically disclaims any 
   warranties  including not limited implied warranties merchantability fitness particular purpose software 
   provided hereunder basis university california obligations provide maintenance  support  
   updates  enhancements modifications class used dispatch uml model change event may 
   occur non-ui  thread user interface components class created response uml model change event being captured umluserinterfacecontainer passed argument invokelater run user interface thread  p class updated cope changes targetchanged 
   mechanism target proppanel constructs umlchangedispatch  
        
    
       dispatch target changed event 
        
    
       dispatch target changed event  
        
    
       dispatch target reasserted event  
        
    
       creates umlchangedispatch   eventtype overriden call one event functions called  
       
        param uic user interface container changes dispatched  
        param et -1 add event listener new target  0 default  
        
   
        see org argouml uml ui umluserinterfacecomponent#targetchanged   
        
   
        see org argouml uml ui umluserinterfacecomponent#targetreasserted   
        
    
       called invokelater user interface thread   dispatches 
       event contained objects implementing 
       umluserinterfacecomponent event    target_changed_add  adds change 
       listener new target completion dispatch  
        
    
       iterates through children container child another container calls dispatch recursively child supports umluserinterfacecomponent calls appropriate method  
       
        param theawtcontainer awt container 
       org argouml uml ui UMLChangeDispatch org argouml uml ui umlchangedispatch runnable  umluserinterfacecomponent target_changed_add   -1 target_changed   0 target_reasserted   7 umlchangedispatch container uic et uic    
            container   uic  
            eventtype   et uic proppanel    
            	target     proppanel  uic  gettarget targetchanged     
        eventtype   0 targetreasserted     
        eventtype   7 run target synchronizeddispatch container dispatch container dispatch container theawtcontainer count   theawtcontainer getcomponentcount    
        component component i   0  i   count  i      
            component   theawtcontainer getcomponent i component container    
                dispatch  container  component component umluserinterfacecomponent 
                       component isvisible eventtype target_changed_add target_changed  
                      umluserinterfacecomponent  component  targetchanged target_reasserted  
                      umluserinterfacecomponent  component  targetreasserted synchronizeddispatch container cont target illegalstateexception  target may not be in dispatch target    
            dispatch cont   
          
      
 org argouml uml ui UMLChangeDispatch