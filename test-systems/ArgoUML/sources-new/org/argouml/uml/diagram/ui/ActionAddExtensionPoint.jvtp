 
   $id$ 
   copyright  c  1996-2006 regents university california rights reserved  permission use  copy  modify distribute software documentation without fee without written 
   agreement hereby granted  provided above copyright notice paragraph appear copies software program documentation copyrighted regents university california software program documentation supplied without any accompanying services regents regents not warrant operation program uninterrupted error-free end-user understands program developed research purposes advised not rely 
   exclusively program any reason event shall university california liable any party direct  indirect  
   special  incidental consequential damages  including lost profits  
   arising out use software documentation  even university california advised possibility damage university california specifically disclaims any 
   warranties  including not limited implied warranties merchantability fitness particular purpose software 
   provided hereunder basis university california obligations provide maintenance  support  
   updates  enhancements modifications class implement addition extension points use cases  p singleton  implemented private constructor static 
   access method  marked final t sensibly subclassed access method wouldn't work properly   p  
   
    author  jeremy bennett  mail jeremybennett com   
    stereotype singleton private copy instance  only accessible through proper 
       access method  
        
                                                                            
   
   constructors 
   
                                                                            
    
       constructor private cannot called directly singleton  make use access funtion  p  
        
   set tooltip string  
                                                                            
   
   main methods single instance action  p singleton only way accessing instance created not exist  p  
       
        return singleton instance  
        
   create singleton not exist return called action invoked  p  
       
        see java awt event actionlistener#actionperformed java awt event actionevent  
        param ae action caused invoked  
        
   find target project browser only anything use case  
   create new extension point make browser target invoke superclass action method predicate determine action enabled  p  
       
        see org tigris gef undo undoableaction#isenabled   
        return   code true  code superclass affirms action enabled target use case   code false  code  
                otherwise  
        
   end class actionaddextensionpoint   org argouml uml diagram ui ActionAddExtensionPoint org argouml uml diagram ui actionaddextensionpoint undoableaction actionaddextensionpoint translator localize  button extension-point    
                resourceloaderwrapper lookupicon  button extension-point     
          
        putvalue action short_description   
                translator localize  button extension-point actionaddextensionpoint singleton singleton singleton actionaddextensionpoint singleton actionperformed actionevent ae actionperformed ae   
 
          
          
 
	object         target   targetmanager getinstance   getmodeltarget model getfacade   isausecase target object ep   
            model getusecasesfactory   
            	 buildextensionpoint target   
 
        targetmanager getinstance   settarget ep isenabled     
	object target   targetmanager getinstance   getmodeltarget isenabled   
                    model getfacade   isausecase target    
      
 
   org argouml uml diagram ui ActionAddExtensionPoint