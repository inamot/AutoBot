 
   $id$ 
   copyright  c  2005-2006 regents university california rights reserved  permission use  copy  modify distribute software documentation without fee without written 
   agreement hereby granted  provided above copyright notice paragraph appear copies software program documentation copyrighted regents university california software program documentation supplied without any accompanying services regents regents not warrant operation program uninterrupted error-free end-user understands program developed research purposes advised not rely 
   exclusively program any reason event shall university california liable any party direct  indirect  
   special  incidental consequential damages  including lost profits  
   arising out use software documentation  even university california advised possibility damage university california specifically disclaims any 
   warranties  including not limited implied warranties merchantability fitness particular purpose software 
   provided hereunder basis university california obligations provide maintenance  support  
   updates  enhancements modifications simple layout class activity diagrams lays out states single column  densely packed assumption ll split one swim lanes user graph traversed starting initial state states placed position first 
   encountered  nothing sophisticated done cycles nodes multiple 
   incoming outgoing edges  
    
    author tom morris diagram laid out  
        
   
       list objects  
        
       note methods read write don't appear used  
        
   
       point start layout  initial state goes here x 
       coordinate must greater half width widest figure placed figures centered location   
        
   
       amount increment y position each node placed pack densely assumption user going split least two swimlanes  
        
   
       finalstate element activitydiagram 
        
    
       construct new layout engine activitydiagram  
        param d activitydiagram laid out  
        
   
        see org argouml uml diagram layout layouter#add org argouml uml diagram layout layoutedobject  
        
   
        see org argouml uml diagram layout layouter#remove org argouml uml diagram layout layoutedobject  
        
   
        see org argouml uml diagram layout layouter#getobjects   
        
   
        see org argouml uml diagram layout layouter#getobject int  
        
   
        see org argouml uml diagram layout layouter#layout   
        
   find initial state 
   place nodes 
   place final state last little separation 
   
       recursively place nodes pointed outgoing transitions recursive algorithm multiple outgoing transitions end up very lopsided one entire subgraph done 
       before dealing transition s   
        
        param seen set nodes seen far 
        param node node collect neighbors system out println  setting location location   
   
        see org argouml uml diagram layout layouter#getminimumdiagramsize   
       org argouml uml diagram activity layout ActivityDiagramLayouter org argouml uml diagram activity layout activitydiagramlayouter layouter activitydiagramlayouter argodiagram d diagram   d add layoutedobject object    
        objects add object remove layoutedobject object    
        objects remove object layoutedobject   getobjects layoutedobject    objects toarray layoutedobject getobject index layoutedobject  objects get index layout     
        object first iterator it   diagram getnodes   iterator    it hasnext       
            object node   it next model getfacade   isapseudostate node   
                       model getdatatypeshelper   equalsinitialkind  
                            model getfacade   getkind node      
                first   node first model getfacade   getincomings first  isempty lastindex   placenodes arraylist    first  0   
 
          
        point location point starting_point   
        location y    offset_y    lastindex   2   
        diagram getcontainingfig finalstate  setlocation location placenodes list seen  object node index seen contains node     
            seen add node model getfacade   isafinalstate node     
                finalstate   node  
              
            fig fig   diagram getcontainingfig node   
            point location point starting_point x - fig getwidth     2  
                    starting_point y   offset_y   index     
              
            fig setlocation location iterator it   model getfacade   getoutgoings node  iterator     
                    it hasnext       
                index   placenodes seen  model getfacade   gettarget it next     
                                  index index dimension getminimumdiagramsize dimension  
                starting_point x   300  
                starting_point y   offset_y   objects size   
           
      
 
 org argouml uml diagram activity layout ActivityDiagramLayouter