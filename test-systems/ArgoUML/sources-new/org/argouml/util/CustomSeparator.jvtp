 
   $id$ 
   copyright  c  1996-2006 regents university california rights reserved  permission use  copy  modify distribute software documentation without fee without written 
   agreement hereby granted  provided above copyright notice paragraph appear copies software program documentation copyrighted regents university california software program documentation supplied without any accompanying services regents regents not warrant operation program uninterrupted error-free end-user understands program developed research purposes advised not rely 
   exclusively program any reason event shall university california liable any party direct  indirect  
   special  incidental consequential damages  including lost profits  
   arising out use software documentation  even university california advised possibility damage university california specifically disclaims any 
   warranties  including not limited implied warranties merchantability fitness particular purpose software 
   provided hereunder basis university california obligations provide maintenance  support  
   updates  enhancements modifications  
    
   base class custom separators  
   
    p instantiated directly works separator delimiter string purpose use delimiter string mytokenizer  unless token wider 32 characters  
   
    p subclass class provide intricate recogition tokens known class subclassed recognize 
   quoted strings balanced parentheses  
   
    p mental image tokenizing process  nl  
    li reset called  
    li each character  c sequence being tokenized  ul  
        li addchar c called each separator tokenizer  
        li addchar returns true  break   ul  
    li hasfreepart checked see something follows true  ul  
        li endchar c called each following character  
        li endchar returns true  break   ul  
    li tokenlength checked see far back sequence token 
       begun characters before last token made token token saved returned next  
     nl  
   
    author michael stockman 0 11 2 
    see mytokenizer constructor only availible subclasses class use override   link #addchar addchar recognize separator control don't may block separators constructor creates new custom separator matches character start  unless override   link #addchar addchar default behaviour return false addchar until start encountered hasfreepart returns false  
       
        param start start character constructor creates new custom separator matches string start  unless override   link #addchar addchar default behaviour return false addchar until start encountered hasfreepart returns false  
       
        param start start string  
        
    
       called reset separator before staring look new 
       token  
        
    
       returns length matched token not required meaningful unless addchar returned true hasfreepart 
       returned false endchar returned true  
       
        return length matched token  
        
    
       called allow decide want capure control matching process return true link #hasfreepart hasfreepart checked see expect things follow  
       
        p default behaviour return false until character string given parameter constructor matched  
       
        param c next character sequence being tokenized  
        return true gain control matching  false continue 
       matching  
        
    
       called check characters expected follow addchar returned true true any following characters fed endchar until endchar returns true  
       
        p default behaviour return false  
       
        return true continue feeding characters endchar false  
        
    
       called check characters expected free part token  
       
        param c next character sequence being tokenized  
        return true indicate token complete false continue feeding characters through endchar  
        
    
       called many characters customseparator read end separator allows see beyond end characters fed separators again looking next token careful  
       
        return number characters read end token read  
       org argouml util CustomSeparator org argouml util customseparator customseparator     
	pattern 0   
	match   pattern customseparator start    
	pattern 1   
	pattern 0    start  
	match pattern length customseparator start    
	pattern   start tochararray    
	match pattern length reset i i   0  i   match length  i    
	    match i    0 tokenlength pattern length addchar c i i   0  i   match length - 1  i    
	    match i    match i   1   
	match match length - 1    c i   0  i   match length  i match i     pattern i hasfreepart endchar c getpeekcount 0  
      
  
org argouml util CustomSeparator