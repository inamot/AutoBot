 
    
   represents node chain view chain vertical hierarchy thus refer previous node parent next node child  
    p usual implementations  nodes function wrappers around data object  thus normally value property allows access value stored node contrast approach chainnode t  class designed used base class provides tree traversing functionality via inheritance  
    p  
   example usage  
   private class basicchainnode extends chainnode basicchainnode    
   public basicchainnode     
   super basicchainnode class   
     
     
   
    param  t type class use some explicit casts form   t constructor ensures cast valid node's parent null node parent node's child null node child 
        
    
       constructs chain node without parent child  
       
        param derivingclass class deriving treenode t always t class need parameter hard information means  
        
    
       returns node's parent empty optional node parent  
       
        return node's parent t empty optional node parent 
        
    
       returns node's child empty optional node child  
       
        return node's child t empty optional node child 
        
    
       removes node parent makes child specified node way whole subchain based node moved given node  
       
        param target new parent 
        throws nullpointerexception target null 
        throws unsupportedoperationexception target descendant node 
        
   check target node not ancestor node create loops tree 
   remove previous parent 
   add child 
    
       adds node child sets parent given node node given node not allowed already tree e parent   
       
        param child node add child 
        return child node 
        throws unsupportedoperationexception given node already parent 
        
    
       sets parent node node  
        p method not set node child new parent remove node old parent probably call   link #moveto chainnode change chain  
       
        param parent new parent 
        
    
       removes child node's child list  giving empty parent  
       
        
   npe called 
    
       returns true node ancestor given node  
        p node considered ancestor itself  
       
        param anothernode node test 
        return true anothernode descendant node 
        throws nullpointerexception anothernode null 
       net sf jabref model ChainNode net sf jabref model  
 
  
  
 
  
 suppresswarnings  unchecked chainnode t chainnode t chainnode t  derivingclass    
        parent child derivingclass isinstance unsupportedoperationexception  the extending chainnode t  has to derive from t optional t  getparent optional ofnullable parent optional t  getchild optional ofnullable child moveto t target    
        objects requirenonnull target isancestorof target unsupportedoperationexception  the target cannot be a descendant of node    
          
 
          
        getparent   ifpresent oldparent -  oldparent removechild     
 
          
        target setchild  t t setchild t child    
        objects requirenonnull child child getparent   ispresent unsupportedoperationexception  cannot add a node which already has a parent  use moveto instead    
          
 
        child setparent  t this child   child child setparent t parent parent   objects requirenonnull parent removechild child child setparent child isancestorof t anothernode    
        objects requirenonnull anothernode anothernode child isancestorof anothernode   
          
      
 net sf jabref model ChainNode