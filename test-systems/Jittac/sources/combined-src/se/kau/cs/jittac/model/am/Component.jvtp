 
    
   class representing components architecture models  components   boxes architecture models 
   represent logical partitions source code mapping between components source code managed se kau cs jittac model mapping architecturemapping turn accessed via component's architecture model  
     
    author sebastian herold 
   
    
    
	   creates component inside given architecture model  
	    param architecture model contain new component  
	    return new component  
	    
    
	   creates component given id  only called during deserialization  
	    param architecture model contain new component  
	    param id id assigned new component  
	    return new component  
	    
  pre null 
    
	   add new outgoing connector component  
	    param conn connector added  
	    return true connector truly added e not connected outgoing component before  
	    
    
	   add new incoming connector component  
	    param conn connector added  
	    return true connector truly added e not connected incoming component before  
	    
    
	   sets components reflexive connector connects components itself supporting construct makes dependency analysis easier reflexive 
	   connector not counted incoming outgoing connector  
	    param conn connector supposed reflexive connector  
	    
    
	   removes connector component's set outgoing connectors  
	    param conn connector removed 
	    return true connector set before  false otherwise  
	    
    
	   removes connector component's set incoming connectors  
	    param conn connector removed 
	    return true connector set before  false otherwise  
	    
    
	   returns component's set outgoing connectors  
	    return see above  empty set outgoing connectors  
	    
    
	   returns component's set incoming connectors  
	    return see above  empty set incoming connectors  
	    
    
	   gets components reflexive connector connects components itself supporting construct makes dependency analysis easier reflexive 
	   connector not counted incoming outgoing connector  
	    return reflexive connector component  
	   se kau cs jittac model am Component se kau cs jittac model am component abstractarchitectureelement component createcomponent architecturemodel am component am component createcomponent architecturemodel am  uuid id component am  id component architecturemodel am  uuid id id am   am  
		outgoingconnectors hashset connector     
		incomingconnectors hashset connector     
		reflexiveconnector component architecturemodel am am setname name name   name getname name architecturemodel getmodel am addoutgoingconnector connector conn outgoingconnectors add conn addincomingconnector connector conn incomingconnectors add conn setreflexiveconnector connector conn reflexiveconnector   conn removeoutgoingconnector connector conn outgoingconnectors remove conn removeincomingconnector connector conn incomingconnectors remove conn set connector  getoutgoingconnectors hashset connector outgoingconnectors set connector  getincomingconnectors hashset connector incomingconnectors connector getreflexiveconnector reflexiveconnector detachfrommodel     
		am override hashcode prime   67 result   1  
		result   prime   result     getid 0   getid   hashcode result  
	  
 
	 override equals object obj obj obj getclass      obj getclass component other    component  obj getid other getid getid   equals other getid se kau cs jittac model am Component