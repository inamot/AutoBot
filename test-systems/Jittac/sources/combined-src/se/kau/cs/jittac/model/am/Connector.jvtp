 class represents connectors architecture models  
    author sebastian herold state connector represents different types connectors reflexion modelling plus additional states reflexive connectors inconsistent situations  e g   not 
	   envisaged convergent   
	    author sebastian herold 
	   
	    
    
	   creates connector between two components none exists between both components must same architecture model  
	    param src component being source connector  may not null  
	    param trg component being target connector  may not null  
	    return new connector object  null one both components null  
	   not same model connector already exists between src equals trg       src getmodel      trg getmodel    return null  
    
	   returns name connector form 
	    
	   name source component -  name target component 
	    
    
	   returns component being source connector  
	    return 
	    
    
	   returns component being target connector  
	    return 
	    
    
	   sets boolean value indicating whether connector envisaged e  whether represents allowed source code 
	   dependencies  
	    param value true envisaged   false not envisaged   
	    
    
	   returns whether connector envisaged not  
	    return true connector envisaged  always true reflexive connectors  false otherwise  
	    
    
	   returns whether connector reflexive e  whether source component equals target  
	   component  
	    return see above  
	    
    
	   returns copy set references contributing connector  
	    return see above  
	    
    
	   adds reference connector 
	    param ref reference added  
	    return true set contributing references changed addition passed reference not contained before call  false otherwise  
	    
    
	   adds set references connector  
	    param refs set references added  
	    return true set contributing references changed addition passed reference not contained before call  false otherwise  
	    
    
	   checks whether reference contributes connector  
	    param ref reference checked  
	    return true passed reference contributes  false otherwise  
	    
    
	   removes reference set contributing references 
	    param ref reference removed  
	    return true set contributing references changed  
	   false otherwise  
	    
    
	   removes references set contributing references 
	    param refs references removed  
	    return true set contributing references changed  
	   false otherwise  
	    
    
	   returns state connector state reflexive connector always state reflexive state envisaged connector state convergence unless contributing references case state state absence state non-envisaged connector state divergence unless contributing references case state state inconsistent  something broken return connector's state according description above  
	   se kau cs jittac model am Connector se kau cs jittac model am connector abstractarchitectureelement state   
		convergence  
		divergence  
		absence  
		inconsistent  
		reflexive connector createconnector component src  component trg src trg src getmodel   containsconnectorbetween src  trg connector src getmodel    src  trg connector architecturemodel am  component src  component trg am   am src   src trg   trg envisaged contributingrefs hashset ixreference architecturemodel getmodel am getname src getname       -      trg getname component getsrc src component gettrg trg setenvisaged value    
		envisaged   value isenvisaged isreflexive envisaged isreflexive getsrc   equals gettrg set ixreference ? ?   getcontributingreferences hashset ixreference contributingrefs addreference ixreference ? ?  ref contributingrefs add ref addreferences set ixreference ? ?   refs contributingrefs addall refs iscontributedby ixreference ? ?  ref contributingrefs contains ref removereference ixreference ? ?  ref contributingrefs remove ref removereferences set ixreference ? ?   refs contributingrefs removeall refs connector state getstate isreflexive state reflexive isenvisaged contributingrefs size     0 ? state convergence   state absence contributingrefs size     0 ? state divergence   state inconsistent detachfrommodel     
		am override hashcode prime   73 result   1  
		result   prime   result     src 0   src hashcode     
		result   prime   result     trg 0   trg hashcode result  
	  
 
	 override equals object obj obj obj getclass      obj getclass connector other    connector  obj src other src src equals other src trg other trg trg equals other trg se kau cs jittac model am Connector